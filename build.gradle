buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'simpleServMockito'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    runtime("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
    testCompile "org.springframework.boot:spring-boot-starter-test" 
     
    compile "org.projectlombok:lombok:1.16.4"
    compile "com.google.guava:guava:18.0"
    testCompile 'junit:junit:4.12'
    testCompile 'org.easytesting:fest-assert:1.4'
    compile  "com.jayway.awaitility:awaitility:1.6.3" 
    compile 'org.assertj:assertj-core:3.1.0'
    testCompile 'pl.pragmatists:JUnitParams:1.0.4'
    compile 'org.mockito:mockito-core:1.10.19'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {

}
